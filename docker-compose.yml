version: "3"

services:
  # client:
  #   build:
  #     dockerfile: Dockerfile.dev
  #     context: ./client
  #   command: npm run dev
  #   container_name: client
  #   stdin_open: true
  #   tty: true
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./client:/usr/src/app
  #     # - /usr/src/app/node_modules
  #     # - /usr/src/app/.next
  #   networks:
  #     - cc-network
  client-admin:
    build:
      dockerfile: Dockerfile.dev
      context: ./client-admin
    command: npm run start
    container_name: client-admin
    stdin_open: true
    tty: true
    ports:
      - "3005:3000"
    environment:
      REACT_APP_API_URL: "http://localhost:3001"
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./client-admin:/usr/src/client-admin
      - /usr/src/client-admin/node_modules
    networks:
      - cc-network
    stdin_open: true
    
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: base
    container_name: cc-server
    command: npm run dev
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      REDIS_HOST: "host.docker.internal"
      MYSQL_HOST: mysqldb
      MYSQL_DATABASE: "cc_db"
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_USER: "root"
      MYSQL_PORT: 3306

    volumes:
      - ./server/src:/usr/src/app/src
    depends_on:
      - "redis"
      - "mysqldb"
    networks:
      - cc-network

  mysqldb:
    container_name: cc-mysql
    image: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      #MYSQL_HOST: "localhost"
      MYSQL_DATABASE: "cc_db"
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

    ports:
      - "3306:3306"
    volumes:
      - /var/lib/mysql
      - ./scripts:/docker-entrypoint-initdb.d
    networks:
      - cc-network

  redis:
    container_name: cc-redis
    image: "redis"
    ports:
      - "6379:6379"
    networks:
      - cc-network

  # nginx:
  #   image: nginx:stable-alpine
  #   container_name: cc-nginx
  #   ports:
  #     - "80:80"

  #   volumes:
  #     - ./nginx/nginx.conf.dev:/etc/nginx/conf.d/nginx.conf

  #   networks:
  #     - cc-network

networks:
  cc-network:
    driver: bridge
